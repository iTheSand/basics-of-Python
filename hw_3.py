# 7_3. Реализовать программу работы с органическими клетками.
# Необходимо создать класс Клетка.
# В его конструкторе инициализировать параметр, соответствующий количеству клеток (целое число).
# В классе должны быть реализованы методы перегрузки арифметических операторов:
# сложение (__add__()), вычитание (__sub__()), умножение (__mul__()), деление (__truediv__()).
# Данные методы должны применяться только к клеткам и выполнять увеличение,
# уменьшение, умножение и обычное (не целочисленное) деление клеток, соответственно.
# В методе деления должно осуществляться округление значения до целого числа.
# Сложение. Объединение двух клеток. При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.
# Вычитание. Участвуют две клетки. Операцию необходимо выполнять только если разность количества ячеек двух клеток больше нуля,
# иначе выводить соответствующее сообщение.
# Умножение. Создается общая клетка из двух.
# Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.
# Деление. Создается общая клетка из двух.
# Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.
# В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
# Данный метод позволяет организовать ячейки по рядам.
# Метод должен возвращать строку вида *****\n*****\n*****...,
# где количество ячеек между \n равно переданному аргументу.
# Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.
# Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5.
# Тогда метод make_order() вернет строку: *****\n*****\n**.
# Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5.
# Тогда метод make_order() вернет строку: *****\n*****\n*****.

class Cell:
    def __init__(self, num_cell):
        int_num_cell = int(num_cell)
        self.num_cell = int_num_cell

    def __add__(self, other):
        result = self.num_cell + other.num_cell
        if result > 0:
            return f"Кол-во ячеек в новой клетке {result} штук"
        else:
            return "Кол-во ячеек в новой клетке меньше или равно нулю"

    def __sub__(self, other):
        result = self.num_cell - other.num_cell
        if result > 0:
            return f"Кол-во ячеек в новой клетке {result} штук"
        else:
            return "Кол-во ячеек в новой клетке меньше или равно нулю"

    def __mul__(self, other):
        result = self.num_cell * other.num_cell
        if result > 0:
            return f"Кол-во ячеек в новой клетке {result} штук"
        else:
            return "Кол-во ячеек в новой клетке меньше или равно нулю"

    def __truediv__(self, other):
        result = self.num_cell // other.num_cell
        if result >= 1:
            return f"Кол-во ячеек в новой клетке {result} штук"
        else:
            return "Кол-во ячеек в новой клетке меньше, равно или близко к нулю"

    def __str__(self):
        return f"Количество ячеек в клетке {self.num_cell} штук"

    def make_order(self, num_cell_in_row):
        self.num_cell_in_row = num_cell_in_row
        print(f"У данной клетки {num_cell_in_row} ячеек в ряду:")
        result = self.num_cell
        for el in range(self.num_cell):
            if el % self.num_cell_in_row == 0:
                print("*" * self.num_cell_in_row, sep="\n")
                result -= num_cell_in_row
                if result < num_cell_in_row:
                    print("*" * result)
                    break


cell_1 = Cell(13)
print(cell_1)
cell_1.make_order(5)

print()

cell_2 = Cell(5)
print(cell_2)
cell_2.make_order(3)

print()

print(cell_1 + cell_2)
